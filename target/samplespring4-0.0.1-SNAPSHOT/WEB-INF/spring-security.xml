<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">

    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/buyer" access="hasAnyRole('ROLE_BUYER', 'ROLE_SELLER')" />
        <intercept-url pattern="/seller" access="hasRole('ROLE_SELLER')" />
        <intercept-url pattern="/**" access="permitAll" />

        <form-login />
        <logout invalidate-session="true" />
    </http>

    <beans:bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="org.postgresql.Driver" />
        <beans:property name="url" value="jdbc:postgresql://localhost:5432/test-database-may_19_2017-2" />
        <beans:property name="username" value="jihad" />
        <beans:property name="password" value="jihad" />
    </beans:bean>

    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <password-encoder hash="sha" />
            <jdbc-user-service id="jdbcUserService" data-source-ref="dataSource"
                users-by-username-query="
                select username, password, isactive
                from users where username=?"
                authorities-by-username-query="
                select u.username, r.role from users u, roles r, user_roles ur
                where u.id=ur.user_id and r.id=ur.role_id and u.username=?"
            />
        </authentication-provider>
    </authentication-manager>
</beans:beans>
